---
// src/layouts/Layout.astro
import '@/styles/global.css'
import AuthNavbar from '@/components/AuthNavbar.astro';
import Navbar from '@/components/Navbar.astro';
import { ClientRouter } from "astro:transitions";
import App from '@/components/SPA';

const { title, currentPage, isApp } = Astro.props;
---
<!DOCTYPE html>
<html lang="en" class="scroll-smooth">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
    <title>{title || 'EversPass'}</title>
    <ClientRouter />

    {/* This script is the single source of truth for applying the theme */}
    <script is:inline>
      const applyTheme = () => {
        const theme = localStorage.getItem('theme') || 'dark';
        if (theme === 'dark') {
          document.documentElement.classList.add('dark');
        } else {
          document.documentElement.classList.remove('dark');
        }
      };

      // Run on initial page load
      applyTheme();

      // Run after every page swap to maintain consistency
      document.addEventListener('astro:after-swap', applyTheme);
    </script>
  </head>
  <body class="bg-white dark:bg-slate-950 text-slate-800 dark:text-slate-200 antialiased">

    {isApp
      ? <AuthNavbar currentPage={currentPage} />
      : <Navbar currentPage={currentPage} />
    }

    <main class="pt-16">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        {isApp
          ? <App client:only="react" />
          : <slot />
        }
      </div>
    </main>

  </body>
  <!-- <script type="module" src="/lib/toast.ts"></script> -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/izitoast/dist/css/iziToast.min.css">
  <script src="https://cdn.jsdelivr.net/npm/izitoast/dist/js/iziToast.min.js"></script>
  <script is:inline>
    const MAX_IZITOASTS = 2;

    window.showLimitedToast = (options) => {
      const toasts = document.querySelectorAll('.iziToast');

      if (toasts.length >= MAX_IZITOASTS) {
        // Remove the first (oldest) toast
        const oldest = toasts[0];
        if (oldest) {
          iziToast.hide({ transitionOut: 'fadeOutUp' }, oldest);
        }
      }

      // Show the new toast
      iziToast.show(options);
    };
  </script>
</html>